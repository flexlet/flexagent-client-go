// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewQueryParams creates a new QueryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewQueryParams() *QueryParams {
	return &QueryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewQueryParamsWithTimeout creates a new QueryParams object
// with the ability to set a timeout on a request.
func NewQueryParamsWithTimeout(timeout time.Duration) *QueryParams {
	return &QueryParams{
		timeout: timeout,
	}
}

// NewQueryParamsWithContext creates a new QueryParams object
// with the ability to set a context for a request.
func NewQueryParamsWithContext(ctx context.Context) *QueryParams {
	return &QueryParams{
		Context: ctx,
	}
}

// NewQueryParamsWithHTTPClient creates a new QueryParams object
// with the ability to set a custom HTTPClient for a request.
func NewQueryParamsWithHTTPClient(client *http.Client) *QueryParams {
	return &QueryParams{
		HTTPClient: client,
	}
}

/* QueryParams contains all the parameters to send to the API endpoint
   for the query operation.

   Typically these are written to a http.Request.
*/
type QueryParams struct {

	/* OutputLineLimit.

	   Output lines limit

	   Format: int32
	   Default: 10
	*/
	OutputLineLimit *int32

	/* OutputLineStart.

	   Output line start

	   Format: int32
	*/
	OutputLineStart *int32

	/* Urn.

	   Job urn
	*/
	Urn string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the query params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *QueryParams) WithDefaults() *QueryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the query params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *QueryParams) SetDefaults() {
	var (
		outputLineLimitDefault = int32(10)
	)

	val := QueryParams{
		OutputLineLimit: &outputLineLimitDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the query params
func (o *QueryParams) WithTimeout(timeout time.Duration) *QueryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the query params
func (o *QueryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the query params
func (o *QueryParams) WithContext(ctx context.Context) *QueryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the query params
func (o *QueryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the query params
func (o *QueryParams) WithHTTPClient(client *http.Client) *QueryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the query params
func (o *QueryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOutputLineLimit adds the outputLineLimit to the query params
func (o *QueryParams) WithOutputLineLimit(outputLineLimit *int32) *QueryParams {
	o.SetOutputLineLimit(outputLineLimit)
	return o
}

// SetOutputLineLimit adds the outputLineLimit to the query params
func (o *QueryParams) SetOutputLineLimit(outputLineLimit *int32) {
	o.OutputLineLimit = outputLineLimit
}

// WithOutputLineStart adds the outputLineStart to the query params
func (o *QueryParams) WithOutputLineStart(outputLineStart *int32) *QueryParams {
	o.SetOutputLineStart(outputLineStart)
	return o
}

// SetOutputLineStart adds the outputLineStart to the query params
func (o *QueryParams) SetOutputLineStart(outputLineStart *int32) {
	o.OutputLineStart = outputLineStart
}

// WithUrn adds the urn to the query params
func (o *QueryParams) WithUrn(urn string) *QueryParams {
	o.SetUrn(urn)
	return o
}

// SetUrn adds the urn to the query params
func (o *QueryParams) SetUrn(urn string) {
	o.Urn = urn
}

// WriteToRequest writes these params to a swagger request
func (o *QueryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.OutputLineLimit != nil {

		// query param outputLineLimit
		var qrOutputLineLimit int32

		if o.OutputLineLimit != nil {
			qrOutputLineLimit = *o.OutputLineLimit
		}
		qOutputLineLimit := swag.FormatInt32(qrOutputLineLimit)
		if qOutputLineLimit != "" {

			if err := r.SetQueryParam("outputLineLimit", qOutputLineLimit); err != nil {
				return err
			}
		}
	}

	if o.OutputLineStart != nil {

		// query param outputLineStart
		var qrOutputLineStart int32

		if o.OutputLineStart != nil {
			qrOutputLineStart = *o.OutputLineStart
		}
		qOutputLineStart := swag.FormatInt32(qrOutputLineStart)
		if qOutputLineStart != "" {

			if err := r.SetQueryParam("outputLineStart", qOutputLineStart); err != nil {
				return err
			}
		}
	}

	// path param urn
	if err := r.SetPathParam("urn", o.Urn); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
